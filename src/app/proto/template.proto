syntax = "proto3";
package dma;

import "value.proto";

message ProductContentProto {
  string name = 1;
  string id = 4;
  repeated string encoders = 2;
  repeated MonsterProto monsters = 3;
  repeated NPCProto npcs = 5;
  repeated ConditionProto conditions = 6;
  repeated GlossaryProto glossaries = 14;
  repeated ItemProto items = 7;
  repeated SpellProto spells = 8;
  repeated ProductProto products = 9;
  repeated MiniatureProto miniatures = 10;
  repeated MapsProto.Map maps = 11;
  repeated TokensProto.Token tokens = 12;
  repeated EncounterProto encounters = 13;
}

message CommonProto {
  string name = 1;
  string plural = 2;
  repeated string bases = 3;
  bool base_only = 4;
  repeated string categories = 5;
  repeated string synonyms = 6;
  string short_description = 8;
  string description = 7;

  message Quote {
    string message = 1;
    string source = 2;
  }
  Quote quote = 15;

  string player_description = 14;

  repeated RangeProto pages = 9;
  repeated LinkProto images = 10;
  repeated string tags = 11;

  repeated string incompletes = 12;

  enum Version {
    DND_5 = 0;
    DND_5_24 = 1;
  }
  Version version = 13;
}

message WorldTemplateProto {
  CommonProto common = 1;
  CalendarProto calendar = 2;

  message Names
  {
    string race = 1;
    string region = 2;
    repeated string male = 3;
    repeated string female = 4;
    repeated string surename = 5;
  }
  repeated Names names = 3;
}

message MonsterProto {
  CommonProto common = 1;

  enum Habitat {
    UNDEFINED_HABITAT = 0;
    ANY_HABITAT = 1;
    ARCTIC = 2;
    COASTAL = 3;
    DESERT = 4;
    FOREST = 5;
    GRASSLAND = 6;
    HILL = 17;
    MOUNTAIN = 7;
    SWAMP = 8;
    UNDERDRAK = 9;
    UNDERWATER = 10;
    URBAN = 11;
    PLANAR_ABYSS = 19;
    PLANAR_ACHERON = 27;
    PLANAR_ASTRAL_PLANE = 26;
    PLANAR_BEASTLANDS = 15;
    PLANAR_ELEMENTAL_AIR = 14;
    PLANAR_ELEMENTAL_CHAOS = 25;
    PLANAR_ELEMENTAL_EARTH = 22;
    PLANAR_ELEMENTAL_FIRE = 18;
    PLANAR_ELEMENTAL_WATER = 23;
    PLANAR_ETHEREAL = 30;
    PLANAR_FEYWILD = 21;
    PLANAR_GEHENNA = 13;
    PLANAR_LIMBO = 12;
    PLANAR_LOWER_PLANES = 16;
    PLANAR_MECHANUS = 29;
    PLANAR_NINE_HELLS = 20;
    PLANAR_SHADOWFELL = 28;
    PLANAR_UPPER_PLANES = 24;
  }
  repeated Habitat habitat = 48;

  enum TreasureType {
    UNDEFINED_TREASURE = 0;
    NONE = 1;
    ANY_TREASURE = 2;
    INDIVIDUAL = 3;
    ARCANA_TREASURE = 4;
    ARMAMENTS = 5;
    IMPLEMENTS = 6;
    RELICS = 7;
  }
  repeated TreasureType treasure_type = 49;

  SizeProto size = 2;
  MonsterTypeProto type = 3;
  bool swarm = 47;
  repeated MonsterTagProto tags = 4;
  AlignmentProto alignment = 5;
  int32 hit_dice_number = 7;
  repeated SpeedProto speed = 8;
  RationalProto challenge = 20;

  message Abilities {
    int32 strength = 1;
    int32 dexterity = 2;
    int32 constitution = 3;
    int32 intelligence = 5;
    int32 wisdom = 4;
    int32 charisma = 6;
  }
  Abilities abilities = 9;

  int32 natural_armor = 6;
  int32 initiative_bonus = 50;

  Ability spellcasting_ability = 10;
  repeated Ability saving_throws = 11;
  repeated Ability removed_saving_throws = 51;

  enum Skill {
    UNKNOWN_SKILL = 0;
    ACROBATICS = 2;
    ANIMAL_HANDLING = 10;
    ARCANA = 5;
    ATHLETICS = 1;
    DECEPTION = 15;
    HISTORY = 6;
    INSIGHT = 11;
    INTIMIDATION = 16;
    INVESTIGATION = 7;
    MEDICINE = 12;
    NATURE = 8;
    PERCEPTION = 13;
    PERFORMANCE = 17;
    PERSUASION = 18;
    RELIGION = 9;
    SLEIGHT_OF_HAND = 3;
    STEALTH = 4;
    SURVIVAL = 14;
  }
  repeated Skill proficient_skills = 12;
  repeated Skill double_proficient_skills = 13;
  repeated Skill removed_skills = 30;

  repeated DamageProto.DamageType damage_resistances = 16;
  repeated DamageProto.DamageType damage_immunities = 15;
  enum ConditionType {
    UNKNOWN_CONDITION = 0;
    BLINDED = 1;
    CHARMED = 2;
    DEAFENED = 3;
    FRIGHTENED = 4;
    GRAPPLED = 5;
    ICNAPACITATED = 6;
    INVISIBLE = 7;
    PARALYZED = 8;
    PETRIFIED = 9;
    POISONED = 10;
    PRONE = 11;
    RESTRAINED = 12;
    STUNNED = 13;
    UNCONSCIOUS = 14;
    EXHAUSTION = 15;
  }
  repeated ConditionType condition_immunities = 17;
  repeated DamageProto.DamageType damage_vulnerabilities = 14;

  message Senses {
    int32 blindsight_feet = 1;
    int32 darkvision_feet = 2;
    int32 tremorsense_feet = 3;
    int32 truesight_feet = 4;
    string special = 5;
  }
  Senses senses = 18;

  message Languages {
    enum Name {
      UNKNOWN_LANGUAGE = 0;
      ALL = 37;
      NONE = 38;
      ABYSSAL = 9;
      AQUAN = 25;
      AURAN = 24;
      BLINK_DOG = 36;
      BULLYWUG = 27;
      CELESTIAL = 10;
      COMMON = 1;
      DEEP_SPEECH = 12;
      DRACONIC = 11;
      DROW_SIGN_LANGUAGE = 18;
      DRUIDIC = 23;
      DWARVISH = 2;
      ELVISH = 3;
      GIANT = 4;
      GITH = 35;
      GNOLL = 33;
      GNOMISH = 5;
      GOBLIN = 6;
      GRELL = 21;
      HALFLING = 7;
      HOOK_HORROR = 30;
      IGNAN = 32;
      INFERNAL = 13;
      MODRON = 26;
      ORC = 8;
      OTYUGH = 28;
      PRIMORDIAL = 14;
      SAHUAGIN = 31;
      SLAAD = 22;
      SYLVAN = 15;
      TERRAN = 19;
      THIEVES_CANT = 17;
      THRI_KREEN = 39;
      TROGLODYTE = 20;
      UMBER_HULK = 34;
      UNDERCOMMON = 16;
      WORG = 29;
      YETI = 40;
    }
    repeated Name names = 1;
    string special = 2;
    int32 telepathy_feet = 3;
  }
  Languages languages = 19;

  message Trait {
    string name = 1;
    int32 per_day = 3;
    int32 lair_per_day = 4;
    string description = 2;
  }
  repeated Trait traits = 21;

  message Multiattack {
    message Attacks {
      message Attack {
        int32 number = 1;
        string name = 2;
      }
      repeated Attack attacks_and = 1;
    }
    repeated Attacks attacks_or = 1;
    string special = 2;
  }
  Multiattack multiattack = 22;

  message Attack {
    string name = 1;

    enum Type {
      UKNOWN_ATTACK_TYPE = 0;
      MELEE_WEAPON = 1;
      RANGED_WEAPON = 2;
      MELEE_SPELL = 3;
      RANGED_SPELL = 4;
      MELEE_WEAPON_DEX = 5;
      MELEE_WEAPON_INT = 6;
      MELEE_WEAPON_CON = 8;
      RANGED_WEAPON_STR = 7;
    }
    Type type = 2;
    int32 reach_feet = 3;
    int32 range_feet = 4;
    int32 range_max_feet = 5;
    int32 targets = 6;
    bool can_target = 7;

    repeated DamageProto hits = 8;
    repeated DamageProto misses = 9;

    string special = 10;
    int32 attack_bonus = 11;
  }
  repeated Attack attacks = 23;

  message Action {
    string name = 1;
    string tag = 13;
    int32 per_day = 9;

    enum Recharge {
      UNKNOWN = 0;
      LONG_REST = 1;
      SHORT_REST = 2;
      RANDOM_6 = 3;
      RANDOM_5_6 = 4;
      RANDOM_4_6 = 5;
      RANDOM_3_6 = 6;
      RANDOM_2_6 = 7;
    }
    Recharge recharge = 10;

    string description = 2;
    string condition = 5;
    string trigger = 11;
    string response = 12;
    Ability save = 3;
    int32 save_dc = 4;
    string save_description = 14;
    string failure = 6;
    string success = 7;
    string failure_or_success = 8;
  }
  repeated Action actions = 24;
  repeated Action bonus_actions = 46;
  repeated Action reactions = 25;

  message Legendary {
    string description = 1;
    int32 uses = 3;
    int32 lair_uses = 4;
    repeated Action actions = 2;
  }
  Legendary legendary = 26;

  repeated string items_used = 27;
  repeated string items_carried = 28;
  repeated string items_removed = 29;

  // The following are leftovers from the 3.5 implementation.
  enum Treasure {
    UNKNOWN_TREADSURE = 0;
    NONE_TREASURE = 1;
    STANDARD = 2;
    DOUBLE = 3;
    TRIPLE = 4;
    QUADRUPLE = 5;
  }
  Treasure treasure = 220;

  int32 level_adjustment = 124;
  bool main_race = 125;

  message Possession {
    string name = 1;
    string text = 2;
    DiceProto count = 3;
  }
  repeated Possession possession = 32;

  repeated string proficiency = 33;
  bool quadruped = 34;

  repeated ParametrizedTemplateProto quality = 35;

  message Height {
    int32 inches = 1;
    DiceProto modifier = 2;
  }
  Height male_height = 41;
  Height female_height = 42;

  message Weight {
    int32 pounds = 1;
    DiceProto modifier = 2;
  }
  Weight male_weight = 43;
  Weight female_weight = 44;

  message Age {
    int32 start = 1;
    int32 middle = 2;
    int32 old = 3;
    int32 venerable = 4;
    DiceProto max = 5;
    DiceProto short = 6;
    DiceProto medium = 7;
    DiceProto long = 8;
  }
  Age age = 45;

}

message MonstersProto {
  repeated MonsterProto monsters = 1;
}

message NPCProto {
  CommonProto common = 1;

  enum Gender {
    UNKNOWN_GENDER = 0;
    FEMALE = 1;
    MALE = 2;
    SPECIAL = 3;
  }
  Gender gender = 2;
  string gender_special = 3;
  MonsterProto race = 4;
  repeated string factions = 5;
  repeated string locations = 6;

  message History {
    string date = 1;
    string text = 2;
  }
  repeated History histories = 7;
}

message NPCsProto {
  repeated NPCProto npcs = 1;
}

message ConditionProto {
  CommonProto common = 1;
}

message ConditionsProto {
  repeated ConditionProto conditions = 1;
}

message GlossaryProto {
  CommonProto common = 1;

  enum Type {
    UNKNOWN = 0;
    NONE = 1;
    ACTION = 2;
    AREA_OF_EFFECT = 3;
    ATTITUDE = 4;
    CONDITION = 5;
    HAZARD = 6;
  }
  Type type = 2;

  repeated string see_also = 3;
  string abbreviation = 4;
}

message ItemProto {
  CommonProto common = 1;

  enum Type {
    UNKNOWN_TYPE = 0;
    ADVENTURING_GEAR = 1;
    FOOD = 2;
    DRINK = 3;
    LODGING = 4;
    POTION = 5;
    WEAPON = 6;
    ARMOR = 7;
    TOY = 8;
    TOOL = 24;
    WAND = 9;
    TRINKET = 10;
    ROD = 11;
    RING = 12;
    SCROLL = 13;
    STAFF = 14;
    POISON = 15;
    CIRCLET = 16;
    MISC_MAGIC = 17;
    GEM = 18;
    ART = 19;
    CLOTHING = 20;
    VEHICLE = 21;
    WONDROUS_ITEM_TYPE = 22;
    WONDROUS_ARTIFACT_TYPE = 23;
  }
  Type type = 2;

  enum Subtype {
    UNKNOWN_SUBTYPE = 0;
    WONDROUS_ITEM = 2;
    WONDROUS_ARTIFACT = 3;
  }
  Subtype subtype = 3;

  enum Category {
    UNKONWN_CATEGORY = 0;
    LIGHT_ARMOR = 1;
    MEDIUM_ARMOR = 2;
    HEAVY_ARMOR = 3;
    AMMUNITION = 4;
    MELEE_WEAPON = 5;
  }
  repeated Category applies_to = 31;
  string applies_to_exception = 32;

  enum Rarity {
    UNKNOWN_RARITY = 0;
    COMMON = 1;
    UNCOMMON = 2;
    RARE = 3;
    VERY_RARE = 4;
    ULTRA_RARE = 5;
    LEGENDARY = 6;
    UNIQUE = 7;
  }
  Rarity rarity = 6;
  bool attunement = 15;

  MoneyProto value = 4;
  WeightProto weight = 5;

  SizeProto size = 7;
  int32 damage_threshold = 8;
  int32 hit_points = 9;
  bool fragile = 11;

  message Substance {
    enum Material {
      UNKNOWN = 0;
      PAPER = 1;
      CLOTH = 2;
      ROPE = 3;
      GLASS = 4;
      ICE = 5;
      LEATHER = 6;
      HIDE = 7;
      WOOD = 8;
      STONE = 9;
      IRON = 10;
      STEEL = 11;
      CRYSTAL = 12;
      MITHRAL = 13;
      ADAMANTINE = 14;
      BONE = 15;
    }
    Material material = 1;
    DistanceProto thickness = 2;
  }
  Substance substance = 12;
  string player_name = 13;
  bool monetary = 14;

  WeaponProto weapon = 16;
  ArmorProto armor = 17;
  MagicProto magic = 18;
  WearableTemplateProto wearable = 45;
  ToolProto tool = 119;

  IncompleteTemplateProto _incomplete = 116;
  CountedTemplateProto _counted = 118;
  MultipleTemplateProto _multiple = 47;
  MultiuseTemplateProto _multiuse = 48;
  TimedTemplateProto _timed = 19;
  CommodityTemplateProto _commodity = 20;
  ContainerTemplateProto _container = 21;
  LightTemplateProto _light = 23;
  CompositeTemplateProto _composite = 24;
  repeated ParametrizedTemplateProto _qualities = 27;

  message Random {
    enum Type {
      UNKNOWN = 0;
      MUNDANE = 1;
    }    Type type = 1;
    DiceProto multiple = 2;
    repeated string item = 3;
  }
  repeated Random random = 28;

  message Material {
    MoneyProto value = 1;
    enum ValueType {
      UNKNOWN = 0;
      PER_POUND = 1;
    }
    ValueType value_type = 2;
    int32 hp_per_inch = 3;
    RationalProto weight_multiplier = 4;
    RationalProto hp_multiplier = 5;
  }
  Material material = 29;

  message Lore {
    message Check {
      string skill = 1;
      int32 dc = 2;
    }
    repeated Check checks = 1;
    string description = 2;
  }
  repeated Lore lore = 30;
}

message ItemsProto {
  repeated ItemProto items = 1;
}

message ItemLookupProto {
  string name = 1;
  repeated string templates = 2;
  repeated string category_or = 3;
  MoneyProto value = 4;
  MoneyProto value_min = 5;
  MoneyProto value_max = 6;
  WeightProto weight_min = 7;
  WeightProto weight_max = 8;
  repeated SizeProto size_or = 9;
  repeated ItemProto.Substance.Material material_or = 10;
  int32 hp = 11;
  string appearance = 12;
  string dm_notes = 13;
  int32 multiple = 14;
  int32 multiuse = 15;
  int32 count = 18;
  DurationProto time_left = 16;
  repeated ItemLookupProto content = 17;
}

message LevelTemplateProto {
  CommonProto common = 1;
  string abbreviation = 2;
  string adventures = 3;
  string characteristics = 4;
  string alignment_options = 5;
  string religion = 6;
  string background = 7;
  string races = 8;
  string otherClasses = 9;
  string role = 10;
  string important_abilities = 11;
  repeated AlignmentProto allowed_alignment = 12;
  DiceProto hit_dice = 13;
  int32 skill_points = 14;
  repeated string class_skill = 15;
  int32 class_skills_any = 16;
  repeated Proficiency weapon_proficiency = 17;
  repeated string individual_weapon_proficiency = 18;
  repeated ArmorType armor_proficiency = 19;
  repeated LeveledTemplateProto quality = 20;
  repeated int32 base_attack = 21;
  bool good_fortitude_save = 22;
  bool good_will_save = 23;
  bool good_reflex_save = 24;
  repeated LeveledTemplateProto bonus_feat = 25;
  Ability spell_ability = 26;

  message PerLevel {
    repeated int32 value = 1;
  }
  repeated PerLevel spells_per_day = 27;
  repeated PerLevel spells_known = 28;
  repeated string automatic_feat = 29;
  message Requirement {
    string description = 1;
  }
  repeated Requirement requirement = 30;
}

message QualityTemplateProto {
  CommonProto common = 1;

  enum Type {
    UNKNOWN = 0;
    EXTRAORDINARY = 1;
    SPELL_LIKE = 2;
    SUPERNATURAL = 3;
  }
  Type type = 2;
  SpeedProto speed = 3;
  ExpressionProto speed_expression = 4;

  message AbilityModifier {
    Ability ability = 1;
    ModifierProto modifier = 2;
  }
  repeated AbilityModifier ability_modifier = 5;

  enum Immunity {
    UNKNOWN_IMMUNITY = 0;
    SLEEP_SPELLS = 1;
    SLEEP_EFFECTS = 2;
  }
  repeated Immunity immunity = 6;
  ModifierProto reflex_modifier = 7;
  ModifierProto will_modifier = 8;
  ModifierProto fortitude_modifier = 9;

  message KeyedModifier {
    string key = 1;
    ModifierProto modifier = 2;
  }
  repeated KeyedModifier skill_modifier = 10;
  ModifierProto attack_modifier = 11;
  ModifierProto damage_modifier = 12;
  repeated string bonus_feat = 13;
  string name_format = 14;
  ModifierProto ac_modifier = 15;
}

message ParametrizedTemplateProto {
  string name = 1;
  string title = 2;

  ParametersProto parameters = 3;
  int32 per_day = 4;
  ConditionalProto condition = 5;
}

message LeveledTemplateProto {
  int32 level = 1;
  ParametrizedTemplateProto template = 2;
}

message WeaponProto {
  enum Proficiency {
    UNKNOWN_PROFICIENCY = 0;
    SIMPLE = 1;
    MARTIAL = 2;
  }
  Proficiency proficiency = 1;

  enum Style {
    UNKNONW_STYLE = 0;
    MELEE = 1;
    RANGED = 2;
  }
  Style style = 2;

  enum Type {
    UNKNOWN_TYPE = 0;
    SWORD = 1;
    PICK = 2;
    STAFF = 3;
    BOW = 4;
    POLEARM = 5;
    WHIP = 6;
    CROSSBOW = 7;
    CLUB = 8;
    SPEAR = 9;
    AXE = 10;
    FIREARM = 11;
    SLING = 12;
    DART = 13;
    NET = 14;
    FLAIL = 15;
    MACE = 16;
  }
  Type type = 3;

  DamageProto damage = 4;
  DamageProto damage_two_handed = 5;
  int32 range_feet = 6;
  int32 range_max_feet = 7;

  enum Property {
    UNKNOWN_PROPERTY = 0;
    AMMUNITION = 1;
    FINESSE = 2;
    HEAVY = 3;
    LIGHT = 4;
    LOADING = 5;
    RANGE = 6;
    REACH = 7;
    SPECIAL = 8;
    THROWN = 9;
    TWO_HANDED = 10;
    VERSATILE = 11;
  }
  repeated Property properties = 8;

  enum Mastery {
    UNKNOWN_MASTERY = 0;
    CLEAVE = 1;
    GRAZE = 2;
    NICK = 3;
    PUSH = 4;
    SAP = 5;
    SLOW = 6;
    TOPPLE = 7;
    VEX = 8;
  }
  Mastery mastery = 9;
}

message MagicProto
{
  enum Type
  {
    UNKNOWN = 0;
    ARMOR = 1;
    SKILL = 2;
    ABILITY = 3;
    SAVE = 4;
    DAMAGE = 5;
    ATTACK = 6;
  }

  message Modifier
  {
    Type type = 1;
    string name = 2;
    int32 value = 3;
  }
  repeated Modifier modifier = 1;

  repeated string attack_options = 2;
}

message WearableTemplateProto
{
  enum Slot
  {
    UNKNOWN = 0;
    HEAD = 1;
    NECK = 2;
    TORSO = 3;
    BODY = 4;
    WAIST = 5;
    SHOULDERS = 6;
    HANDS = 7;
    HAND = 8;
    FINGER = 9;
    WRISTS = 10;
    FEET = 11;
    EYES = 12;
  }
  Slot slot = 1;
  DurationProto don = 5;
  DurationProto doff = 6;

  RandomDurationProto _wear = 2;
  RandomDurationProto _remove = 4;
  RandomDurationProto _wear_hastily = 3;
}

message ToolProto {
  Ability ability = 1;

  message Utilize {
    string task = 1;
    int32 dc = 2;
  }
  repeated Utilize utilizes = 2;

  repeated string craft_items = 3;
}

message IncompleteTemplateProto
{
  string text = 1;
}

message CountedTemplateProto
{
  int32 count = 1;

  enum Unit
  {
    UNKNOWN = 0;
    DAY = 1;
    PIECE = 2;
    SHEET = 3;
    USE = 4;
    PAGE = 5;
    CHARGE = 6;
    APPLICATION = 7;
    DAMAGE = 8;
  }
  Unit unit = 2;
}

message MultipleTemplateProto
{
  int32 count = 1;
  CountedTemplateProto.Unit unit = 2;
}

message MultiuseTemplateProto
{
  int32 count = 1;
}

message TimedTemplateProto
{
  RandomDurationProto duration = 1;
}

message CommodityTemplateProto
{
  AreaProto area = 1;
  DistanceProto length = 2;
}

message ContainerTemplateProto
{
  VolumeProto capacity = 1;

  enum State
  {
    UNKNOWN = 0;
    SOLID = 1;
    GRANULAR = 2;
    LIQUID = 3;
    GASEOUS = 4;
  }
  State state = 2;
  bool fixed_weight = 3;
}

message ArmorProto {
  enum Type
  {
    UNKNOWN = 0;
    LIGHT = 1;
    MEDIUM = 2;
    HEAVY = 3;
    SHIELD = 4;
    MAGIC = 5;
  }
  Type type = 1;

  int32 ac = 2;
  int32 max_dexterity = 3;
  int32 min_strength = 4;
  bool stealth_disadvantage = 5;
}

message LightTemplateProto {
  message Light {
    DistanceProto distance = 1;

    enum Shape {
      UNKNOWN = 0;
      CONE = 1;
      CYLINDER = 2;
      LINE = 3;
      SPHERE = 4;
    }
    Shape shape = 2;
  }
  Light bright = 1;
  Light shadowy = 2;
}

message CompositeTemplateProto {
  message Or
  {
    repeated string name = 1;
  }
  repeated Or contains = 1;
}

message FeatTemplateProto {
  CommonProto common = 1;
  FeatType type = 2;
  string benefit = 3;
  string special = 4;
  string normal = 5;
  string prerequisites = 6;

  ModifierProto attack_modifier = 8;
  ModifierProto damage_modifier = 9;
  int32 additional_attacks = 10;
  RestrictionProto condition = 11;
  ModifierProto initiative_modifier = 12;
  repeated NameAndModifierProto skill_modifier = 13;
  ModifierProto strength_modifier = 14;
  ModifierProto dexterity_modifier = 15;
  ModifierProto constitution_modifier = 16;
  ModifierProto intelligence_modifier = 17;
  ModifierProto wisdom_modifier = 18;
  ModifierProto charisma_modifier = 19;
  ModifierProto fortitude_modifier = 20;
  ModifierProto will_modifier = 21;
  ModifierProto reflex_modifier = 22;

  enum Qualifier {
    UNKNOWN = 0;
    NONE = 1;
    WEAPON = 2;
    SCHOOL = 3;
    SKILL = 4;
    SPELLS = 5;
  }
  Qualifier requires_qualifier = 23;
}

message MiniatureProto {
  CommonProto common = 1;

  string set = 2;
  int32 number = 3;
  string number_affix = 4;
  string race = 5;
  string type = 6;
  repeated string subtype = 7;
  repeated string class = 8;
  SizeProto size = 9;

  ItemProto.Rarity rarity = 10;
}

message MiniaturesProto {
  repeated MiniatureProto miniatures = 1;
}

message SkillTemplateProto {
  CommonProto common = 1;

  Ability ability = 2;
  string check = 3;
  string action = 4;
  string retry = 5;
  string special = 6;
  string synergy_text = 7;
  string restriction_text = 8;
  string untrained = 9;

  enum Restriction
  {
    UNKNOWN_RESTRICTION = 0;
    TRAINED_ONLY = 1;
    ARMOR_CHECK_PENALTY = 2;
    SUBTYPE_ONLY = 3;
    DOUBLE_ARMOR_CHECK_PENALTY = 4;
  }
  repeated Restriction restriction = 10;

  enum Modifier
  {
    UNKNOWN_MODIFIER = 0;
    SPEED = 1;
    SIZE = 2;
  }
  repeated Modifier modifier = 11;

  message DC
  {
    int32 number = 1;
    string text = 2;
  }
  repeated DC dc = 12;

  message Synergy
  {
    string name = 1;
    string condition = 2;
  }
  repeated Synergy synergy = 13;
}

message SpellProto {
  CommonProto common = 1;

  enum School {
    UNKNOWN_SCHOOL = 0;
    ABJURATION = 1;
    CONJURATION = 2;
    DIVINATION = 3;
    ENCHANTMENT = 4;
    EVOCATION = 5;
    ILLUSION = 6;
    NECROMANCY = 7;
    TRANSMUTATION = 8;
  }
  School school = 2;
  bool ritual = 3;

  int32 level = 4;
  repeated SpellClass spell_class = 5;
  bool component_verbose = 6;
  bool component_somatic = 7;
  bool component_material = 8;
  repeated string material = 9;
  DurationProto casting_time = 10;

  message Duration {
    DurationProto time = 1;
    bool instantaneous = 2;
    bool concentration = 3;
    bool dispelled = 4;
    bool triggered = 5;
  }
  Duration duration = 11;

  string target = 12;

  message Range {
    DistanceProto distance = 1;
    bool self = 2;
    bool touch = 3;
    bool unlimited = 4;

    enum Shape {
      UNKNOWN_SHAPE = 0;
      CONE = 1;
      CUBE = 2;
      CYLINDER = 3;
      LINE = 4;
      SPHERE = 5;
    }
    Shape shape = 5;
  }
  Range range = 13;
  string higher_levels = 14;
  repeated string sounds = 15;
  repeated string monsters = 16;
}

message SpellsProto {
  repeated SpellProto spells = 1;
}

message EncounterProto {
  CommonProto common = 1;
  string title = 2;
  repeated string locations = 3;
  repeated LinkProto sounds = 4;
  repeated string notes = 6;
  repeated string npcs = 7;
  repeated ParametrizedProto monsters = 8;
  repeated ParametrizedProto items = 9;
  repeated string spells = 10;
}

message ParametrizedProto {
  string name = 1;
  int32 count = 2;
  repeated string bases = 3;

  message Value {
    string key = 1;
    string value = 2;
  }
  repeated Value values = 4;
}

message AdventureTemplateProto {
  CommonProto common = 1;
  message Level {
    int32 min = 1;
    int32 max = 2;
  }
  Level recommended_level = 4;

  message Encounter {
    string name = 1;
    repeated string base = 2;
    string short_name = 3;
    string description = 4;
    string short_description = 5;
    int32 encounter_level = 6;
    repeated string location = 7;

    message ReadAloud {
      string condition = 1;
      string text = 2;
    }
    repeated ReadAloud read_aloud = 8;

    message Environment {
      message Spot {
        string name = 1;
        string description = 2;

        message Check {
          string name = 1;
          int32 dc = 2;
          int32 modifier = 3;
          repeated string condition = 4;
        }
        repeated Check check = 3;
      }
      repeated Spot floor = 1;

      message Ceiling {
        string name = 1;
        string description = 2;
        int32 height_feet = 3;
        int32 min_height_feet = 4;
        int32 max_height_feet = 5;
      }
      repeated Ceiling ceiling = 2;

      repeated Spot walls = 3;

      message Door {
        string name = 1;
        string description = 2;
        int32 thickness_inches = 3;
        int32 hardness = 4;
        int32 hp = 5;
      }
      repeated Door door = 4;
      repeated Spot terrain = 5;
      repeated Spot trap = 6;
    }
    Environment environment = 9;

    message Senses {
      repeated string light = 1;
      repeated string sound = 2;
      repeated string smell = 3;
      repeated string touch = 4;
      repeated string feel = 5;
    }
    Senses senses = 10;

    message Creature {
      string name = 1;
      string reason = 2;
      repeated string tactics = 3;
    }
    repeated Creature creature = 11;

    repeated string development = 12;

    message Treasure {
      string name = 1;
      string description = 2;
      repeated ItemLookupProto item = 3;
    }
    repeated Treasure treasure = 13;

    message SpellGroup {
      string name = 1;
      string description = 2;
      int32 caster_level = 3;
      int32 ability_bonus = 4;
      SpellClass spell_class = 6;

      message SpellReference {
        string name = 1;
        repeated MetaMagic meta_magic = 2;
      }
      repeated SpellReference spell = 5;
    }
    repeated SpellGroup spell_group = 14;
  }
  repeated Encounter encounter = 5;
}

message ProductProto {
  CommonProto common = 1;
  string title = 2;
  string leader = 3;
  string subtitle = 4;
  repeated string worlds = 30;
  string notes = 5;

  message Person
  {
    string name = 1;
    string job = 2;
  }
  repeated Person author = 6;
  repeated Person editor = 7;
  repeated Person cover = 8;
  repeated Person cartographer = 9;
  repeated Person illustrator = 10;
  repeated Person typographer = 11;
  repeated Person manager = 12;

  message Date
  {
    int32 year = 1;
    int32 month = 2; // January is 1, 0 is no month.
  }
  Date date = 13;

  message ISBN
  {
    string group = 1;
    string publisher = 2;
    string title = 3;
    int32 check = 4;
  }
  ISBN isbn = 14;

  message ISBN13
  {
    string group13 = 1;
    string group = 2;
    string publisher = 3;
    string title = 4;
    int32 check = 5;
  }
  ISBN13 isbn13 = 15;
  int32 pages = 16;

  enum System
  {
    UNKNOWN_SYSTEM = 0;
    NONE = 1;
    CHAINMAIL = 2;
    DND_1ST = 3;
    ADND_1ST = 4;
    ADND_2ND = 5;
    ADND_2ND_SAGA = 6;
    ADND_REVISED = 7;
    DND_3RD = 8;
    DND_3_5 = 9;
    DND_4 = 10;
    DND_NEXT = 11;
    DND_5E = 49;
    D20_MODERN = 12;
    D20_FUTUTRE = 13;
    D20 = 14;
    ALTERNITY = 15;
    AMAZING_ENGINE = 16;
    BLOOD_WARS = 17;
    CHAOSIUM = 18;
    DARK_HEAVEN = 19;
    DRAGON_DICE = 20;
    DRAGON_STRIKE = 21;
    DUEL_MASTER = 22;
    ENDLESS_QUEST = 23;
    FIRST_QUEST = 24;
    GAMMA_WORLD = 25;
    GANGBUSTERS = 26;
    LEGEND_OF_THE_FIVE_RINGS = 27;
    MAGIC_THE_GATHERING = 28;
    MARVEL_SUPER_DICE = 29;
    MLB_SHOWDOWN_2002 = 30;
    MLB_SHOWDOWN_2003 = 31;
    MLB_SHOWDOWN = 32;
    NEOPETS = 33;
    ONE_ON_ONE = 34;
    POKEMON = 35;
    SAGA = 36;
    SPECIAL = 37;
    SPELLFIRE = 38;
    STAR_WARS_TCG = 39;
    STAR_WARS = 40;
    SUPER_ENDLESS_QUEST = 41;
    SWORD_AND_SORCERY = 42;
    TERROR_TRACKS = 43;
    TERROR_TRAX = 44;
    WILD_SPACE = 45;
    WORLD_WAR_II = 46;
    XXVC = 47;
    MARVEL_SUPER_HEROES = 48;
  }
  System system = 17;

  enum Audience
  {
    DM = 0;
    PLAYER = 1;
    ALL = 2;
    UNKNOWN = 3;
  }
  Audience audience = 18;

  enum Type
  {
    UNKNOWN_TYPE = 0;
    ACCESSORY = 1;
    ADVENTURE = 2;
    BOARD_GAME = 3;
    BOOSTER_PACK = 4;
    CALENDAR = 5;
    CAMPAIGN_EXPANSION = 6;
    CAMPAIGN_SETTING = 7;
    CARD_GAME = 8;
    CARDS_TYPE = 9;
    CATALOG = 10;
    COLLECTION = 11;
    COMICS = 12;
    COOKBOOK = 13;
    DICE = 14;
    ELECTRONIC_ACCESSORY = 15;
    GUIDE = 16;
    MAGAZINE = 17;
    MINIATURE = 18;
    MONSTER_COMPENDIUM = 19;
    NOVEL = 20;
    PROMOTION = 21;
    RULEBOOK = 22;
    RULES_SUPPLEMENT = 23;
    SOFTWARE = 24;
    SOURCEBOOK = 25;
    SPECIAL_BOOK = 26;
    SUPPLEMENT = 27;
  }
  Type type = 19;

  enum Style
  {
    UNKNOWN_STYLE = 0;
    BOOKLET = 1;
    BOX = 2;
    CARDS_STYLE = 3;
    FLYER = 4;
    FOLDER = 5;
    HARDCOVER = 6;
    MAP = 7;
    MEDIUM_BOX = 8;
    PACK = 9;
    PAPERBACK = 10;
    POSTER = 11;
    SCREEN = 12;
    SHEETS = 13;
    SMALL_BOX = 14;
    SOFT_COVER = 15;
    STICKER = 16;
  }
  Style style = 20;
  string producer = 21;
  string volume = 22;
  string number = 23;
  repeated string series = 24;
  PriceProto price = 25;

  message Content
  {
    enum Part
    {
      UNKNOWN_PART = 0;
      BOARD = 1;
      BOOK = 2;
      BOOKLET = 3;
      BOX = 4;
      CARD = 5;
      CD = 6;
      COUNTER = 7;
      COVER = 8;
      DICE = 9;
      FLYER = 10;
      FOLDER = 11;
      GATEFOLD = 12;
      MAGNET = 13;
      MAP = 14;
      MINIATURE = 15;
      MISC = 16;
      OVERLAY = 17;
      PACK = 18;
      PAGE = 19;
      PLAYING_PIECE = 20;
      POSTER = 21;
      SCREEN = 22;
      SHEET = 23;
      STICKER = 24;
    }
    Part part = 1;
    string description = 2;
    int32 number = 3;
  }
  repeated Content content = 26;
  repeated string required_requirements = 27;
  repeated string optional_requirements = 28;

  enum Layout {
    UNKNOWN_LAYOUT = 0;
    FULL_COLOR = 1;
    FOUR_COLOR = 2;
    TWO_COLOR = 3;
    COLOR_COVER = 4;
    BLACK_AND_WHITE = 5;
    MIXED = 6;
  }
  Layout layout = 29;
}

message ProductsProto {
  repeated ProductProto products = 1;
}

message Attribution {
  string name = 1;
  string url = 2;

  enum Licence {
    UNKNOWN = 0;
    PUBLIC_DOMAIN = 1;
    COPYRIGHTED = 2;
  }
  Licence licence = 3;
}

message MapsProto {
  message Map {
    CommonProto common = 1;
    repeated string locations = 2;

    message Level {
      string base = 1;
      repeated string masks = 2;
      repeated string layers = 3;
    }
    repeated Level levels = 9;

    repeated string layers = 3;
    int32 px_per_square = 4;
    string background = 5;
    int32 width = 6;
    int32 height = 7;
    Attribution attribution = 8;
  }

  repeated Map maps = 1;
}

message TokensProto {
  message Token {
    CommonProto common = 1;
    int32 width_squares = 2;
    int32 height_squares = 3;
    Attribution attribution = 4;
    int32 origin_x = 5;
    int32 origin_y = 6;
  }

  repeated Token tokens = 1;
}

